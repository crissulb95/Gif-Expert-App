{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","updateCategories","categories","useState","inputValue","updateInputValue","onSubmit","e","preventDefault","length","id","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","updateState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMA4CeA,EAzCK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WAAiB,EAEbC,mBAAS,IAFI,mBAE9CC,EAF8C,KAElCC,EAFkC,KAmBtD,OACI,oCACI,0BACIC,SAdS,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBR,EAAiB,CAAEG,GAAH,mBAAkBF,KAGlCG,EAAiB,MAQbK,GAAG,SAEH,2BACIC,KAAK,OACLC,MAAQR,EACRS,SAxBK,SAAEN,GACnBF,EAAiBE,EAAEO,OAAOF,a,uBCNrBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCF,EAFpC,+DAIAG,MAAOD,GAJP,cAIbE,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHf,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXR,IAAG,UAAEO,EAAIE,cAAN,aAAE,EAAYC,iBAAiBV,QAbvB,kBAkBZK,GAlBY,4CAAH,sDCYLM,EAZK,SAAC,GAAa,IAAXJ,EAAU,EAAVA,IAEXC,EAAeD,EAAfC,MAAOR,EAAQO,EAARP,IAEf,OACI,yBAAKY,UAAU,0CACX,4BAAMJ,GACN,yBAAKK,IAAMb,EAAMc,IAAMN,MCqBpBO,EA1BC,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAETb,mBAAS,CACpCmB,KAAM,GACNY,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAuBxC,OAhBAC,qBAAW,WACPtB,EAASC,GACJsB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAY,CACRd,KAAMiB,EACNL,SAAS,MAGd,WAGZ,CAAElB,IAEEmB,EDpB0BM,CAAczB,GAAlCW,EAFiB,EAEtBL,KAAaY,EAFS,EAETA,QAErB,OACI,6BACI,4BAAMlB,GAEJkB,GAAW,0CAEb,yBAAKJ,UAAU,aACTH,EAAOH,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,CACIiB,IAAMjB,EAAIf,GACVe,IAAMA,UEUfkB,EAxBM,WAAO,IAAD,EAEkBxC,mBAAS,CAAE,YAF7B,mBAEfD,EAFe,KAEHD,EAFG,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CACIA,iBAAqBA,EACrBC,WAAcA,IAElB,6BACA,4BACMA,EAAWsB,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACI0B,IAAM1B,EACNA,SAAWA,U,MCdnC4B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a82dbf95.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ updateCategories, categories }) => {\r\n\r\n    const [ inputValue, updateInputValue ] = useState('');\r\n\r\n    const handleChange = ( e ) => {\r\n        updateInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.length > 0 ) {\r\n            updateCategories([ inputValue, ...categories ]);\r\n            //sin traer categories => updateCategories( array => [ ...array, inputValue ] );\r\n            // en array se toma la referencia directamente en donde se envíe la información(categories en el sitio)\r\n            updateInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form\r\n                onSubmit={ handleSubmit }\r\n                id='forma'\r\n            >\r\n                <input \r\n                    type='text'\r\n                    value={ inputValue }\r\n                    onChange={ handleChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    updateCategories: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AddCategory;","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ category }&limit=10&api_key=uYz5hTLxE8ru9X09ETlQeF84SRgtcjKL`;\r\n\r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json(); \r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react'\r\n\r\nconst GifGridItem = ({ img }) => {\r\n\r\n    const { title, url } = img;\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <h3>{ title }</h3>\r\n            <img src={ url } alt={ title } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return ( \r\n        <div>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                { images.map( img => ( \r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        img={ img }    \r\n                        //{ ...img }\r\n                        //también se puede pasar como { ...img }, y servirá.\r\n                        //desestructurando desde el otro lado en la parte de los argumentos\r\n                        //los items necesarios ({ id, title, url })                \r\n                        />\r\n                )) }\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, updateState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setTimeout( () => {\r\n\r\n                    updateState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 2250 );\r\n                    \r\n            } )\r\n    }, [ category ] );\r\n\r\n    return state;\r\n\r\n};","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory.js';\r\nimport GifGrid from './GifGrid.js';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [ categories, updateCategories ] = useState([ 'Digimon' ]);    \r\n\r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n                updateCategories = { updateCategories }\r\n                categories= { categories }\r\n            />\r\n            <hr />\r\n            <ol>\r\n                { categories.map( category => \r\n                    <GifGrid\r\n                        key={ category }\r\n                        category={ category }\r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}